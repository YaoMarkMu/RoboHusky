# 注释以 ’#‘ 或 ‘;’ 开头，单独占一行，不能和配置内容在同一行
# `key = value` 的 key 前面不能有空格，否则该行视为上一行配置项 value 的一部分

[DEFAULT]
# 是否打开cs(cache service), cs是自研缓存服务，特点是容量大、速度快；目前mc作为cs的一部分
# enable_cs = True

# console log 级别，默认 WARNING, 选项有 CRITICAL, ERROR, WARNING, INFO, DEBUG, NOTSET
# 若需要在 console 输出 IO 统计信息，需要设置级别为 INFO
# console_log_level = WARNING
# [TCY]
# console_log_level = INFO

# file log 级别，默认 DEBUG, 选项有 CRITICAL, ERROR, WARNING, INFO, DEBUG, NOTSET
# file_log_level = DEBUG
# [TCY]
# file_log_level = INFO

# log 文件路径，默认 无 ，即不输出 log 文件
# 若已配置 log 文件路径，则训练运行之前需要确保 log_file_path 指定的目录已被创建
# log_file_path = /mnt/lustre/<username>/petrel_log_dir
# [TCY]
# log_file_path = /mnt/lustre/tianchangyao/code/petrel_log_dir
# log 文件最大长度，默认 1GB
# file_log_max_bytes = 1073741824

# log 文件备份数目，默认 1
# file_log_backup_count = 1

# 每隔 count_disp 次 get 操作后，日志记录 IO 统计信息。默认值 5000
# 如果 IO 统计信息输出过于频繁，可将该数值增大
# 如果需要关闭 IO 统计信，可将该数值设置为 0
# count_disp = 5000
# 内存统计，默认关闭
# enable_mem_trace = False

# get 操作失败后，允许重试的次数，默认 10
# get_retry_max = 10

# 默认 cluster，即当访问 Ceph 没有指定 cluster 时，从 default_cluster 获取数据
default_cluster = hzh

# [cs]
# cs(cache service) 相关配置， 包含vcs(volatile cache storage)/pcs(persistent cache storage)
# cs_config_path = /mnt/lustre/tianchangyao/code/tcs/cs_enable_vcs.conf

# 若访问的路径过长（超过250个字节），cs 将出现 McKeySizeExceed 错误。
# 配置 mc_key_cb 可将传给 cs 的路径进行转换，可选的参数有:
# blake2b, blake2s, md5, pbkdf2_hmac, sha1, sha224,
# sha256, sha384, sha3_224, sha3_256, sha3_384,
# sha3_512, sha512, shake_128, shake_256

# mc_key_cb = sha256

# 是否输出 cs debug log，默认 True
# 注意最终是否输出到 console 和 file 分别还需要由 console_log_level 和 file_log_level 决定
# debug_cs = True

# [dfs]
# enable_cs = True

# 至少需要配置一个 cluster ，否则将出现 ConfigSectionNotFoundError
# 对于每个集群的具体配置，如果没有指定，则以[DEFAULT]作为取值
# 例如在此处设置 ‘enable_cs = False’ 将覆盖默认配置

[wwhnew_s]
enable_mc = True
boto = True
access_key = HZ2Z79RK8Z1QNWXWF6ED
secret_key = 4A0fki2iRPMJKLhmfESfZUkttn35MMzKLs61wZYQ
host_base = http://10.140.2.254:80

[wwhnew]
enable_mc = True
boto = True
access_key = HZ2Z79RK8Z1QNWXWF6ED
secret_key = 4A0fki2iRPMJKLhmfESfZUkttn35MMzKLs61wZYQ
host_base = http://10.135.7.248:80

[hzh_s]
enable_mc = True
boto = True
access_key = F4WRMDR6A2KWKIRDPG3C
secret_key = PMBttjLRefKVJHbd2bcorOhsO9mrKyCYns7vC0Br
host_base = http://10.140.2.204:80

[hzh_s_new]
enable_mc = True
boto = True
access_key = F4WRMDR6A2KWKIRDPG3C
secret_key = PMBttjLRefKVJHbd2bcorOhsO9mrKyCYns7vC0Br
host_base = http://10.140.27.254:80

[hzh]
enable_mc = True
boto = True
access_key = F4WRMDR6A2KWKIRDPG3C
secret_key = PMBttjLRefKVJHbd2bcorOhsO9mrKyCYns7vC0Br
host_base = http://10.135.7.248:80

[xs]
enable_mc = True
boto = True
access_key = 1AE88FH15VP9ENQ4JV4U
secret_key = ohAk6O8WiEzESG3YmvYJI50wcP4cQHfE84YB2OHi
host_base = http://10.140.2.204:80

[wukong]
enable_mc = False
boto = True
access_key = 0I3X5C8ZY9YBCWPNX9W1
secret_key = oooVvyUG0nfn0Z6ABkAGOrjoDDegJk50YdyiP6rL
host_base = http://10.140.2.204:80

[lqy]
boto = True
enable_mc = False
access_key = 5UKAP0GV05X67RVF22GU
secret_key = WLkSDz2dD4hIq2rGWwyjUtU5GVrdq3OcOGwJ91cd
host_base = http://10.135.7.248:80

[zql]
boto = True
enable_mc = False
access_key = 7725WAASDB87JZC2Q0JD
secret_key = vS6XpwyVYvDWJ3CuppTSNRz5AuTB3FEKAXAGMNDR 
host_base = http://10.135.7.248:80

[pcluster]
enable_mc = True
boto = True
access_key = HZ2Z79RK8Z1QNWXWF6ED
secret_key = 4A0fki2iRPMJKLhmfESfZUkttn35MMzKLs61wZYQ
host_base = http://10.135.7.248:80

[pcluster_ssd]
enable_mc = True
boto = True
access_key = HZ2Z79RK8Z1QNWXWF6ED
secret_key = 4A0fki2iRPMJKLhmfESfZUkttn35MMzKLs61wZYQ
host_base = http://10.135.7.249:80
